{"version":3,"sources":["components/NasaCard/assets/logo.png","components/App/App.module.css","modules/Auth/actions.js","modules/Auth/auth.js","modules/RoverPhotos/actions.js","modules/RoverPhotos/RoverPhotos.js","modules/RoverPhotos/api.js","modules/RoverPhotos/sagas.js","modules/index.js","store.js","components/Login/Login.js","components/NasaCard/NasaCard.js","components/RoverPhotos/RoverPhotos.js","components/SelectSol/SelectSol.js","components/RoversViewer/RoversViewer.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","root","addKey","createAction","handleActions","Object","defineProperty","state","action","apiKey","payload","getIsAuthorized","createSelector","auth","getKey","changeSol","fetchPhotosRequest","fetchPhotosSuccess","fetchPhotosFailure","sol","objectSpread","current","min","max","photos","_handleActions2","_action$payload","name","rover","isLoading","isLoaded","_action$payload2","_action$payload3","error","combineReducers","getSol","roverPhotos","getPhotos","solNum","fetch","concat","then","response","status","Promise","reject","json","fetchWatcher","fetchWorker","solWorker","solWatcher","rootSaga","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","this","loaded","key","res","_context2","select","sent","path","call","fetchPhotos","put","t0","_marked2","rovers","i","_context3","length","fork","_marked3","_context4","_marked4","_context5","_marked5","roverSagas","modules_marked","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","run","Login","inputValue","handleChange","event","_this","setState","target","value","handleKeyPress","onEnter","props","classes","react_default","createElement","Paper_default","className","Typography_default","paragraph","component","rel","href","TextField_default","onChange","onKeyPress","input","label","margin","PureComponent","withStyles","theme","mixins","gutters","paddingTop","spacing","unit","paddingBottom","width","textAlign","NasaCard","Card_default","card","CardMedia_default","media","image","Logo","maxWidth","height","RoverPhotos","_this$props","title","GridList_default","cols","map","photo","GridListTile_default","id","Math","round","random","src","img_src","alt","camera","full_name","padding","fontSize","fontWeight","SelectSol","classCallCheck","possibleConstructorReturn","getPrototypeOf","selectedSol","_e","changePropsSol","debounce","minSol","maxSol","Slider_default","slider","text","RoverViewer","curSol","forEach","elem","_this$props2","_this$props2$sol","Grid_default","container","justify","item","components_SelectSol_SelectSol","direction","components_RoverPhotos_RoverPhotos","xs","Component","mapDispatchToProps","connect","App","handleEnterApiKey","isAuthorized","renderApp","renderLogin","RoversViewer","alignItems","styles","components_NasaCard_NasaCard","components_Login_Login","ReactDOM","render","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f08f7aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.63e40655.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__36Xht\"};","import { createAction } from 'redux-actions';\r\n\r\nexport const addKey = createAction('AUTH/ADD_KEY')\r\n","// Реализуйте редьюсер\r\nimport { addKey } from './actions';\r\nimport { handleActions } from 'redux-actions';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport default handleActions(\r\n  {\r\n    [addKey]: (state, action) => ({\r\n      apiKey: action.payload\r\n    })\r\n  },\r\n  { apiKey: null }\r\n);\r\n\r\nexport const getIsAuthorized = createSelector(\r\n  [state => state.auth.apiKey],\r\n  apiKey => (apiKey ? true : false)\r\n);\r\n\r\nexport const getKey = createSelector(\r\n  [state => state.auth],\r\n  auth => auth.apiKey\r\n);\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const changeSol = createAction('ROVER_PHOTOS/CHANGE_SOL');\r\n\r\nexport const fetchPhotosRequest = createAction(\r\n  'ROVER_PHOTOS/FETCH_PHOTOS_REQUEST'\r\n);\r\nexport const fetchPhotosSuccess = createAction(\r\n  'ROVER_PHOTOS/FETCH_PHOTOS_SUCCESS'\r\n);\r\nexport const fetchPhotosFailure = createAction(\r\n  'ROVER_PHOTOS/FETCH_PHOTOS_FAILURE'\r\n);\r\n","// Реализуйте редьюсер\r\n// Файл с тестами RoverPhotos.test.js поможет вам в этом\r\n\r\nimport { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  changeSol,\r\n  fetchPhotosRequest,\r\n  fetchPhotosSuccess,\r\n  fetchPhotosFailure\r\n} from './actions';\r\nimport { createSelector } from 'reselect';\r\nimport path from 'ramda/src/path';\r\n\r\nconst sol = handleActions(\r\n  {\r\n    [changeSol]: (state, action) => ({ ...state, current: action.payload })\r\n  },\r\n  { current: 1, min: 1, max: 100 }\r\n);\r\n\r\nconst photos = handleActions(\r\n  {\r\n    [fetchPhotosRequest]: (state, action) => {\r\n      const { name, sol } = action.payload;\r\n      const rover = state[name];\r\n      return {\r\n        ...state,\r\n        [name]: {\r\n          ...rover,\r\n          [sol]: { isLoading: true, isLoaded: false, photos: [] }\r\n        }\r\n      };\r\n    },\r\n    [fetchPhotosSuccess]: (state, action) => {\r\n      const { name, sol, photos } = action.payload;\r\n      const rover = state[name];\r\n      return {\r\n        ...state,\r\n        [name]: {\r\n          ...rover,\r\n          [sol]: {\r\n            isLoading: false,\r\n            isLoaded: true,\r\n            photos: photos\r\n          }\r\n        }\r\n      };\r\n    },\r\n    [fetchPhotosFailure]: (state, action) => {\r\n      const { name, sol, error } = action.payload;\r\n      const rover = state[name];\r\n      return {\r\n        ...state,\r\n        [name]: {\r\n          ...rover,\r\n          [sol]: {\r\n            isLoading: false,\r\n            isLoaded: true,\r\n            error: error\r\n          }\r\n        }\r\n      };\r\n    }\r\n  },\r\n  {}\r\n);\r\n\r\nexport default combineReducers({ sol, photos });\r\n\r\nexport const getSol = createSelector(\r\n  [state => state.roverPhotos.sol],\r\n  sol => sol\r\n);\r\nexport const getPhotos = createSelector(\r\n  [state => state.roverPhotos.photos],\r\n  photos => photos\r\n);\r\n\r\nexport const getErrorCurry = state => rover => sol =>\r\n  path([rover, `${sol}`, 'error']);\r\nexport const getIsLoadedCurry = state => rover => sol =>\r\n  path([rover, `${sol}`, 'isLoaded']);\r\n","export const getPhotos = (apiKey, rover, solNum) => {\r\n  return fetch(\r\n    `https://api.nasa.gov/mars-photos/api/v1/rovers/` +\r\n      `${rover}/photos?` +\r\n      `sol=${solNum}&` +\r\n      `api_key=${apiKey}`\r\n  ).then(response =>\r\n    response.status !== 200 ? Promise.reject(response) : response.json()\r\n  );\r\n};\r\n","// Реализуйте саги\r\nimport { takeEvery, call, put, select, fork } from 'redux-saga/effects';\r\nimport {\r\n  fetchPhotosRequest,\r\n  fetchPhotosSuccess,\r\n  fetchPhotosFailure,\r\n  changeSol\r\n} from './actions';\r\nimport { getPhotos as fetchPhotos } from './api';\r\nimport { getPhotos } from './RoverPhotos';\r\nimport path from 'ramda/src/path';\r\nimport { getKey } from '../Auth';\r\n\r\nfunction* fetchWatcher() {\r\n  yield takeEvery(fetchPhotosRequest, fetchWorker);\r\n}\r\n\r\nfunction* fetchWorker(action) {\r\n  const { name, sol } = action.payload;\r\n  const photos = yield select(getPhotos);\r\n  const loaded = path([name, `${sol}`, 'isLoaded']);\r\n  const error = path([name, `${sol}`, 'error']);\r\n  const key = yield select(getKey);\r\n\r\n  if (!loaded(photos) || error(photos)) {\r\n    try {\r\n      const res = yield call(fetchPhotos, key, name, sol);\r\n      yield put(\r\n        fetchPhotosSuccess({ photos: res.photos, name: name, sol: sol })\r\n      );\r\n    } catch (error) {\r\n      yield put(fetchPhotosFailure({ error: error, name: name, sol: sol }));\r\n    }\r\n  }\r\n}\r\n\r\nfunction* solWorker(action) {\r\n  const rovers = ['curiosity', 'opportunity', 'spirit'];\r\n  const sol = action.payload;\r\n  const loaded = path([`${sol}`, 'isLoaded']);\r\n  const error = path([`${sol}`, 'error']);\r\n\r\n  for (let i = 0; i < rovers.length; i++) {\r\n    if (!loaded(rovers[i]) || error(rovers[i])) {\r\n      yield fork(fetchWorker, { payload: { name: rovers[i], sol: sol } });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* solWatcher() {\r\n  yield takeEvery(changeSol, solWorker);\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield fork(fetchWatcher);\r\n  yield fork(solWatcher);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { combineReducers } from 'redux';\r\nimport { fork } from 'redux-saga/effects';\r\nimport auth from './Auth';\r\nimport roverPhotos, { sagas as roverSagas } from './RoverPhotos';\r\n\r\nexport default combineReducers({ auth, roverPhotos });\r\n\r\nexport function* rootSaga() {\r\n  yield fork(roverSagas);\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, { rootSaga } from './modules';\r\n\r\nconst createAppStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : f => f\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nexport default createAppStore;\r\n","import React, { PureComponent } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 400\r\n  },\r\n  paragraph: {\r\n    width: '100%',\r\n    textAlign: 'center'\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass Login extends PureComponent {\r\n  state = {\r\n    inputValue: ''\r\n  };\r\n  handleChange = event => {\r\n    this.setState({ inputValue: event.target.value });\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    const { inputValue } = this.state;\r\n    const { onEnter } = this.props;\r\n\r\n    if (event.key === 'Enter') {\r\n      onEnter(inputValue);\r\n    }\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { inputValue } = this.state;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.paragraph} component=\"p\">\r\n          Для получения ключа авторизации необходимо зарегестрироваться на сайте{' '}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://api.nasa.gov/api.html#authentication\"\r\n          >\r\n            NASA\r\n          </a>\r\n        </Typography>\r\n        <TextField\r\n          value={inputValue}\r\n          onChange={this.handleChange}\r\n          onKeyPress={this.handleKeyPress}\r\n          className={classes.input}\r\n          label=\"Nasa API Key\"\r\n          margin=\"dense\"\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { PureComponent } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Logo from './assets/logo.png';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    width: 200,\r\n    height: 200\r\n  }\r\n};\r\n\r\nclass NasaCard extends PureComponent {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia className={classes.media} image={Logo} />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NasaCard);\r\n","import React, { PureComponent } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '30%',\r\n    padding: '20px',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 600\r\n  }\r\n};\r\n\r\nclass RoverPhotos extends PureComponent {\r\n  render() {\r\n    const { classes, photos, name } = this.props;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.title} component=\"h2\">{name}</Typography>\r\n        <GridList cols={3}>\r\n          {photos.map(photo => (\r\n            <GridListTile\r\n              key={photo.id}\r\n              cols={Math.round(Math.random() * 3 - 0.5)}\r\n            >\r\n              <img src={photo.img_src} alt={photo.camera.full_name} />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RoverPhotos);\r\n","import React, { PureComponent } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport debounce from 'debounce';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: 500,\r\n    padding: '0 20px',\r\n    margin: '20px 0 40px'\r\n  },\r\n  slider: {\r\n    padding: '22px 0px'\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: '0 0 10px 0'\r\n  }\r\n};\r\n\r\nclass SelectSol extends PureComponent {\r\n  state = {\r\n    sol: this.props.selectedSol // eslint-disable-line react/destructuring-assignment\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.changePropsSol = debounce(this.changePropsSol, 300);\r\n  }\r\n\r\n  handleChange = (_e, sol) => {\r\n    this.setState({ sol: Math.round(sol) });\r\n    this.changePropsSol(Math.round(sol));\r\n  };\r\n\r\n  changePropsSol(value) {\r\n    const { changeSol } = this.props;\r\n    changeSol(value);\r\n  }\r\n\r\n  render() {\r\n    const { minSol, maxSol, classes } = this.props;\r\n    const { sol } = this.state;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Slider\r\n          className={classes.slider}\r\n          value={sol}\r\n          min={minSol}\r\n          max={maxSol}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Typography className={classes.text} component=\"p\">\r\n          Sol: <b>{sol}</b>\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SelectSol);\r\n","// Здесь вам нужно реализовать вью\r\n\r\n// Подключите его к редакс роутеру\r\n// Вам потребуются селекторы для получения выбранного сола\r\n// и списка фотографий\r\n\r\n// Так же вы будете диспатчить экшены CHANGE_SOL и FETCH_PHOTOS_REQUEST\r\n// Эти экшены находятся в модуле ROVER PHOTOS\r\nimport React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RoverPhotos from '../RoverPhotos';\r\nimport SelectSol from '../SelectSol';\r\nimport { connect } from 'react-redux';\r\nimport { changeSol, fetchPhotosRequest } from '../../modules/RoverPhotos';\r\nimport {\r\n  getSol,\r\n  getPhotos,\r\n  getIsLoadedCurry,\r\n  getErrorCurry\r\n} from '../../modules/RoverPhotos';\r\nimport { getKey } from '../../modules/Auth';\r\n\r\nconst styles = {};\r\n\r\nclass RoverViewer extends Component {\r\n  state = { curSol: 1 };\r\n  rovers = ['curiosity', 'opportunity', 'spirit'];\r\n\r\n  componentDidMount() {\r\n    const {\r\n      auth,\r\n      fetchPhotosRequest,\r\n      sol: { current }\r\n    } = this.props;\r\n    this.rovers.forEach(function(elem) {\r\n      fetchPhotosRequest({ key: auth.apiKey, name: elem, sol: current });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      sol: { current, min, max },\r\n      photos,\r\n      changeSol,\r\n      isLoaded,\r\n      error\r\n    } = this.props;\r\n\r\n    return (\r\n      <Grid container justify={'center'}>\r\n        <Grid item>\r\n          <SelectSol\r\n            changeSol={changeSol}\r\n            minSol={min}\r\n            maxSol={max}\r\n            selectedSol={current}\r\n          />\r\n        </Grid>\r\n        <Grid item container direction=\"row\" wrap=\"nowrap\" spacing={8}>\r\n          {this.rovers.map(elem => {\r\n            if (\r\n              isLoaded(elem)(current)(photos) &&\r\n              !error(elem)(current)(photos)\r\n            ) {\r\n              return (\r\n                <RoverPhotos\r\n                  name={elem}\r\n                  photos={photos[elem][current].photos}\r\n                  current={current}\r\n                  key={elem}\r\n                />\r\n              );\r\n            } else if (isLoaded(elem)(current)(photos)) {\r\n              return (\r\n                <Grid key={elem} item xs={4}>\r\n                  {'Ошибка загрузки'}\r\n                </Grid>\r\n              );\r\n            }\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sol: getSol(state),\r\n  photos: getPhotos(state),\r\n  auth: getKey(state),\r\n  isLoaded: getIsLoadedCurry(state),\r\n  error: getErrorCurry(state)\r\n});\r\nconst mapDispatchToProps = { changeSol, fetchPhotosRequest };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(RoverViewer));\r\n","import React, { PureComponent } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Login from '../Login';\r\nimport NasaCard from '../NasaCard';\r\nimport RoversViewer from '../RoversViewer';\r\nimport styles from './App.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthorized, addKey } from '../../modules/Auth';\r\n\r\nclass App extends PureComponent {\r\n  handleEnterApiKey = apiKey => {\r\n    const { addKey } = this.props;\r\n\r\n    addKey(apiKey);\r\n  };\r\n\r\n  render() {\r\n    const { isAuthorized } = this.props;\r\n    return isAuthorized ? this.renderApp() : this.renderLogin();\r\n  }\r\n\r\n  renderApp() {\r\n    return <RoversViewer />;\r\n  }\r\n\r\n  renderLogin() {\r\n    return (\r\n      <Grid\r\n        alignItems=\"center\"\r\n        className={styles.root}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        container\r\n      >\r\n        <NasaCard />\r\n        <Login onEnter={this.handleEnterApiKey} />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ isAuthorized: getIsAuthorized(state) }),\r\n  { addKey }\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport createStore from './store';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}