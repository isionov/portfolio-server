{"version":3,"sources":["modules/Auth/actions.js","modules/Auth/reducers.js","modules/Auth/selectors.js","modules/api.js","modules/Auth/sagas.js","modules/Order/actions.js","modules/Order/reducers.js","modules/Order/selectors.js","modules/Order/sagas.js","modules/rootSaga.js","modules/Profile/actions.js","modules/Profile/reducers.js","modules/Profile/selectors.js","modules/rootReducer.js","store.js","components/LoginForm/LoginForm.js","components/HOCs/withLocalstorage/withLocalstorage.js","components/HOCs/withLocalstorage/localstorage.js","components/OrderForm/OrderForm.js","components/Map/Map.js","components/PrivateRoute/PrivateRoute.js","components/ProfileForm/ProfileForm.js","components/App/App.js","components/RootRouter/RootRouter.js","index.js"],"names":["loginSuccess","createAction","loginFailure","loginReset","handleLoginSubmit","loggedIn","handleActions","_handleActions","Object","defineProperty","state","action","payload","succes","error","getLoggedStatus","createSelector","path","getErrorStatus","auth","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","name","pass","rawData","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","this","_x","_x2","apply","arguments","getAddress","_ref2","_callee2","_context2","getCoords","_ref3","_callee3","coords","first","second","_context3","_x3","authWatcher","authWorker","takeEvery","_marked","_action$payload","loginField","passField","res","call","put","t0","_marked2","fetchAddress","fetchCoords","fetchAddressSuccess","fetchCoordsSuccess","fetchCoordsClear","addresses","_handleActions2","order","combineReducers","getAddresses","fetchAddressWatcher","fetchAddressWorker","fetchCoordsWatcher","fetchCoordsWorker","sagas_marked","sagas_marked2","_marked3","_context4","_marked4","rootSaga","fork","rootSaga_marked","fetchInitialState","profileInit","form","formReducer","sagaMiddleWare","createSagaMiddleware","getStore","store","createStore","rootReducer","compose","applyMiddleware","f","run","renderTextField","props","input","label","_props$meta","meta","touched","custom","objectWithoutProperties","react_default","createElement","TextField_default","assign","fullWidth","placeholder","helperText","mapDispatchToProps","connect","errorLog","withStyles","width","height","backgroundColor","padding","borderRadius","justifyContent","reduxForm","validate","values","errors","handleSubmit","classes","onSubmit","Grid_default","container","spacing","direction","className","item","Typography_default","align","variant","color","Field","type","id","required","component","Button_default","Redirect","to","withLocalStorage","keyLs","initValue","WrappedComponent","_Component","Wrapper","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","loadLocalstorage","localStorageKey","stringData","window","localStorage","getItem","data","JSON","parse","e","load","saveData","setItem","stringify","save","setState","objectSpread","inherits","createClass","key","value","rest","esm_extends","initialValues","Component","getOptions","options","forEach","elem","push","OrderForm","from","handleChangeFrom","handleChangeTo","handleClick","_this$state","_this$props","removePath","_this$props2","addPath","_this$props3","_this$state2","root","autoComplete","react_select_esm","onChange","isClearable","text","isSearchable","onClick","disabled","Link","position","top","left","fontSize","Map","map","mapContainer","React","createRef","removeLayer","removeSource","addLayer","source","properties","geometry","coordinates","layout","line-join","line-cap","paint","line-color","line-width","flyTo","center","zoom","mapboxgl","accessToken","style","remove","ref","components_OrderForm_OrderForm","flexGrow","flexDirection","PrivateRoute","renderRoute","MyComponent","Route","render","NumberFormatCustom","inputRef","other","number_format_default","getInputRef","onValueChange","format","ProfileForm","mayRedirect","submit","xs","InputLabelProps","shrink","InputProps","inputComponent","enableReinitialize","keepDirtyOnReinitialize","n","numberCardField","split","join","cvvField","isNaN","parseFloat","isFinite","App","AppBar_default","appBar","Toolbar_default","title","btn","Switch","LoginForm","components_PrivateRoute_PrivateRoute","alignItems","display","RootRouter","ReactDOM","BrowserRouter","basename","react_redux_es","RootRouter_RootRouter","document","getElementById"],"mappings":"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","file":"static/js/main.51dc8423.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const AUTH_LOGIN_SUCCESS = \"AUTH/LOGIN_SUCCESS\";\nexport const AUTH_LOGIN_FAILURE = \"AUTH/LOGIN_FAILURE\";\nexport const AUTH_LOGIN_RESET = \"AUTH/LOGIN_RESET\";\nexport const AUTH_HANDLE_LOGIN_SUBMIT = \"AUTH/HANDLE_LOGIN_SUBMIT\";\n\nexport const loginSuccess = createAction(AUTH_LOGIN_SUCCESS);\nexport const loginFailure = createAction(AUTH_LOGIN_FAILURE);\nexport const loginReset = createAction(AUTH_LOGIN_RESET);\nexport const handleLoginSubmit = createAction(AUTH_HANDLE_LOGIN_SUBMIT);\n","import { loginSuccess, loginFailure, loginReset } from \"./actions\";\nimport { handleActions } from \"redux-actions\";\n\nexport const loggedIn = handleActions(\n  {\n    [loginSuccess]: (state, action) => action.payload,\n    [loginFailure]: (state, action) => action.payload,\n    [loginReset]: (state, action) => ({ succes: false, error: \"\" })\n  },\n  { succes: false, error: \"\" }\n);\n","import { createSelector } from \"reselect\";\nimport path from \"ramda/src/path\";\n\nexport const getLoggedStatus = createSelector(\n  [state => state.loggedIn],\n  loggedIn => {\n    return path([\"success\"], loggedIn);\n  }\n);\nexport const getErrorStatus = createSelector(\n  [state => state.loggedIn],\n  loggedIn => {\n    return path([\"error\"], loggedIn);\n  }\n);\n","export const auth = async (name, pass) => {\n  const rawData = await fetch(\n    `https://loft-taxi.glitch.me/auth?username=${name}&password=${pass}`\n  );\n  return await rawData.json();\n};\nexport const getAddress = async () => {\n  const rawData = await fetch(`https://loft-taxi.glitch.me/addressList`);\n  return await rawData.json();\n};\nexport const getCoords = async coords => {\n  const { first, second } = coords;\n  const rawData = await fetch(\n    `https://loft-taxi.glitch.me/route?address1=${first}&address2=${second}`\n  );\n  return await rawData.json();\n};\n\nexport function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { auth } from \"../api\";\nimport { loginSuccess, loginFailure, handleLoginSubmit } from \"./actions\";\n\nexport function* authWatcher() {\n  yield takeEvery(handleLoginSubmit, authWorker);\n}\n\nexport function* authWorker(action) {\n  const { loginField, passField } = action.payload;\n  try {\n    const res = yield call(auth, loginField, passField);\n    yield put(loginSuccess(res));\n  } catch (error) {\n    yield put(loginFailure(error));\n  }\n}\n","import { createAction } from \"redux-actions\";\n\nexport const ORDER_FETCH_ADDRESS = \"ORDER/FETCH_ADDRESS\";\nexport const ORDER_FETCH_COORDS = \"ORDER/FETCH_COORDS\";\nexport const ORDER_FETCH_ADDRESS_SUCCESS = \"ORDER/FETCH_ADDRESS_SUCCESS\";\nexport const ORDER_FETCH_COORDS_SUCCESS = \"ORDER/FETCH_COORDS_SUCCESS\";\nexport const ORDER_FETCH_COORDS_CLEAR = \"ORDER/FETCH_COORDS_CLEAR\";\n\nexport const fetchAddress = createAction(ORDER_FETCH_ADDRESS);\nexport const fetchCoords = createAction(ORDER_FETCH_COORDS);\nexport const fetchAddressSuccess = createAction(ORDER_FETCH_ADDRESS_SUCCESS);\nexport const fetchCoordsSuccess = createAction(ORDER_FETCH_COORDS_SUCCESS);\nexport const fetchCoordsClear = createAction(ORDER_FETCH_COORDS_CLEAR);\n","import {\n  fetchAddressSuccess,\n  fetchCoordsSuccess,\n  fetchCoordsClear\n} from \"./actions\";\nimport { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\n\nconst addresses = handleActions(\n  {\n    [fetchAddressSuccess]: (state, action) => action.payload\n  },\n  []\n);\nconst coords = handleActions(\n  {\n    [fetchCoordsSuccess]: (state, action) => action.payload,\n    [fetchCoordsClear]: (state, action) => []\n  },\n  []\n);\n\nexport const order = combineReducers({ addresses, coords });\n","import { createSelector } from \"reselect\";\nimport path from \"ramda/src/path\";\n\n// export const getAddresses = createSelector(\n//   [state => path([\"order\", \"addresses\"], state)],\n//   addresses => addresses\n// );\nexport const getAddresses = createSelector(\n  [state => state.order.addresses],\n  addresses => addresses\n);\n// export const getCoords = createSelector(\n//   [state => path([\"order\", \"coords\"], state)],\n//   coords => coords\n// );\nexport const getCoords = createSelector(\n  [state => state.order.coords],\n  coords => coords\n);\n","import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { getAddress, getCoords } from \"../api\";\nimport {\n  fetchAddress,\n  fetchAddressSuccess,\n  fetchCoords,\n  fetchCoordsSuccess\n} from \"./actions\";\n\nexport function* fetchAddressWatcher() {\n  yield takeEvery(fetchAddress, fetchAddressWorker);\n}\n\nexport function* fetchAddressWorker(action) {\n  try {\n    const res = yield call(getAddress);\n    yield put(fetchAddressSuccess(res.addresses));\n  } catch (error) {}\n}\n\nexport function* fetchCoordsWatcher() {\n  yield takeEvery(fetchCoords, fetchCoordsWorker);\n}\n\nexport function* fetchCoordsWorker(action) {\n  try {\n    const res = yield call(getCoords, action.payload);\n    yield put(fetchCoordsSuccess(res));\n  } catch (error) {}\n}\n","import { fork } from \"redux-saga/effects\";\nimport { authWatcher } from \"./Auth\";\nimport { fetchAddressWatcher, fetchCoordsWatcher } from \"./Order\";\n\nfunction* rootSaga() {\n  yield fork(authWatcher);\n  yield fork(fetchAddressWatcher);\n  yield fork(fetchCoordsWatcher);\n}\n\nexport default rootSaga;\n","import { createAction } from \"redux-actions\";\n\nexport const PROFILE_FETCH_STATE = \"PROFILE/FETCH_STATE\";\nexport const fetchInitialState = createAction(PROFILE_FETCH_STATE);\n","import { fetchInitialState } from \"./actions\";\nimport { handleActions } from \"redux-actions\";\n\nexport const profileInit = handleActions(\n  {\n    [fetchInitialState]: (state, action) => action.payload\n  },\n  null\n);\n","import { createSelector } from \"reselect\";\n\nexport const getInitialState = createSelector(\n  [state => state.profileInit],\n  profileInit => profileInit\n);\n","import { combineReducers } from \"redux\";\nimport { loggedIn } from \"./Auth\";\nimport { order } from \"./Order\";\nimport { profileInit } from \"./Profile\";\nimport { reducer as formReducer } from \"redux-form\";\n\nexport default combineReducers({\n  loggedIn,\n  order,\n  profileInit,\n  form: formReducer\n});\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./modules\";\nimport { rootSaga } from \"./modules\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst getStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(sagaMiddleWare),\n      process.env.NODE_ENV === \"development\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    )\n  );\n  sagaMiddleWare.run(rootSaga);\n  return store;\n};\nexport default getStore;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  getLoggedStatus,\n  handleLoginSubmit,\n  getErrorStatus\n} from \"../../modules/Auth\";\n\nconst styles = () => ({\n  wrap: {\n    width: \"340px\",\n    height: \"300px\",\n    backgroundColor: \"white\",\n    padding: \"24px\",\n    borderRadius: \"5px\",\n    justifyContent: \"space-around\"\n  }\n});\n\nconst validate = values => {\n  const errors = {};\n  if (values.loginField !== \"test@test.com\") {\n    errors.loginField = \"Неверный логин\";\n  }\n  if (values.passField !== \"123123\") {\n    errors.passField = \"Неверный пароль\";\n  }\n  return errors;\n};\n\nconst renderTextField = props => {\n  const {\n    input,\n    label,\n    meta: { touched, error },\n    ...custom\n  } = props;\n  return (\n    <TextField\n      fullWidth\n      label={label}\n      placeholder={label}\n      helperText={touched && error}\n      {...input}\n      {...custom}\n      error={touched && error && true}\n    />\n  );\n};\n\nconst LoginForm = props => {\n  const { handleSubmit, handleLoginSubmit, loggedIn, classes } = props;\n  const submit = values => {\n    handleLoginSubmit(values);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <Grid\n        container={true}\n        spacing={8}\n        direction=\"column\"\n        wrap=\"nowrap\"\n        className={classes.wrap}\n      >\n        <Grid item>\n          <Typography align=\"center\" variant=\"h5\" color=\"textSecondary\">\n            Войти\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Field\n            name=\"loginField\"\n            type=\"text\"\n            id=\"login-field\"\n            required={true}\n            component={renderTextField}\n            label=\"Имя пользователя\"\n          />\n        </Grid>\n        <Grid item>\n          <Field\n            name=\"passField\"\n            type=\"password\"\n            id=\"pass-field\"\n            required={true}\n            component={renderTextField}\n            label=\"Пароль\"\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            {\"ВОЙТИ\"}\n          </Button>\n        </Grid>\n        {loggedIn ? <Redirect to=\"/map\" /> : null}\n      </Grid>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loggedIn: getLoggedStatus(state),\n  errorLog: getErrorStatus(state)\n});\nconst mapDispatchToProps = { handleLoginSubmit };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  withStyles(styles)(reduxForm({ form: \"LoginFormUnic\", validate })(LoginForm))\n);\n","import React, { Component } from \"react\";\nimport { load, save } from \"./localstorage.js\";\n\nexport const withLocalStorage = (keyLs, initValue) => WrappedComponent => {\n  return class Wrapper extends Component {\n    loadLocalstorage = () => load(keyLs) || initValue;\n    saveData = data => {\n      save(keyLs, data);\n      // this.forceUpdate();\n      this.setState({ ...this.state });\n    };\n\n    render() {\n      const { ...rest } = this.props;\n\n      return (\n        <WrappedComponent\n          {...rest}\n          initialValues={this.loadLocalstorage()}\n          saveData={this.saveData}\n        />\n      );\n    }\n  };\n};\n","function load(localStorageKey) {\n  const stringData = window.localStorage.getItem(localStorageKey);\n  let data = null;\n\n  try {\n    data = JSON.parse(stringData);\n  } catch (e) {\n    data = null;\n  }\n\n  return data;\n}\n\nfunction save(localStorageKey, data) {\n  window.localStorage.setItem(localStorageKey, JSON.stringify(data));\n}\n\nexport { load, save };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withLocalStorage } from \"../HOCs/withLocalstorage\";\n\nimport {\n  fetchAddress,\n  fetchCoords,\n  fetchCoordsClear\n} from \"../../modules/Order\";\nimport { getAddresses, getCoords } from \"../../modules/Order\";\n\nconst styles = () => ({\n  root: {\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    top: \"25%\",\n    left: \"5%\"\n  },\n  wrap: {\n    width: \"400px\",\n    height: \"300px\",\n    backgroundColor: \"white\",\n    padding: \"24px\",\n    borderRadius: \"5px\",\n    justifyContent: \"space-around\"\n  },\n  text: { fontSize: \"14px\", color: \"light-grey\" }\n});\n\nexport const getOptions = (options, key) => {\n  const res = [];\n  options.forEach(function(elem) {\n    if (!key || elem !== key.value) res.push({ value: elem, label: elem });\n  });\n\n  return res;\n};\n\nclass OrderForm extends Component {\n  state = {\n    from: null,\n    to: null,\n    path: false,\n    id: null\n  };\n\n  handleChangeFrom = from => {\n    this.setState({ ...this.state, from });\n  };\n  handleChangeTo = to => {\n    this.setState({ ...this.state, to });\n  };\n\n  handleClick = e => {\n    const { from, to, path } = this.state;\n    const { fetchCoords, coords, removePath, fetchCoordsClear } = this.props;\n\n    if (coords.length === 0) {\n      fetchCoords({ first: from.value, second: to.value });\n    } else if (coords.length > 0 && path) {\n      removePath();\n      fetchCoordsClear();\n      this.setState({ from: null, to: null, path: false });\n    }\n  };\n\n  componentDidMount() {\n    const { fetchAddress } = this.props;\n    fetchAddress();\n  }\n\n  componentDidUpdate() {\n    const { addPath, coords } = this.props;\n    const { path } = this.state;\n    if (coords.length > 0 && !path) {\n      addPath(coords);\n      this.setState({ ...this.state, path: true });\n    }\n  }\n\n  render() {\n    const { classes, addresses, initialValues } = this.props;\n    const { from, to, path } = this.state;\n\n    return (\n      <form className={classes.root} autoComplete=\"off\">\n        <Grid\n          className={classes.wrap}\n          container\n          spacing={8}\n          direction=\"column\"\n          wrap=\"nowrap\"\n        >\n          <Grid item>\n            {initialValues ? (\n              <Typography align=\"left\" variant=\"h5\" color=\"textSecondary\">\n                {path ? \"Заказ размещен\" : \"Вызвать такси\"}\n              </Typography>\n            ) : (\n              <Typography align=\"left\" variant=\"h5\" color=\"textSecondary\">\n                {\"Заполните платежные данные\"}\n              </Typography>\n            )}\n          </Grid>\n          {initialValues ? (\n            <Grid container item spacing={32} direction=\"column\" wrap=\"nowrap\">\n              {path ? null : (\n                <Grid item>\n                  <Select\n                    value={from}\n                    onChange={this.handleChangeFrom}\n                    options={getOptions(addresses, to)}\n                    placeholder=\"Введите адрес отправления\"\n                    isClearable\n                  />\n                </Grid>\n              )}\n\n              {path ? (\n                <Grid item>\n                  <Typography className={classes.text}>\n                    {\"Такси приедет приблизительно через 10 минут\"}\n                  </Typography>\n                </Grid>\n              ) : (\n                <Grid item>\n                  <Select\n                    value={to}\n                    onChange={this.handleChangeTo}\n                    options={getOptions(addresses, from)}\n                    placeholder=\"Введите адрес прибытия\"\n                    isClearable\n                    isSearchable\n                  />\n                </Grid>\n              )}\n            </Grid>\n          ) : (\n            <Grid item>\n              <Typography className={classes.text}>\n                {\"Укажите информацию о банковской карте, чтобы сделать заказ.\"}\n              </Typography>\n            </Grid>\n          )}\n\n          <Grid item>\n            {initialValues ? (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={this.handleClick}\n                disabled={from && to ? false : true}\n              >\n                {path ? \"Сделать новый заказ\" : \"Заказать такси\"}\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                component={Link}\n                to={\"/profile\"}\n              >\n                {\"Перейти в профиль\"}\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  addresses: getAddresses(state),\n  coords: getCoords(state)\n});\n\nconst mapDispatchToProps = { fetchAddress, fetchCoords, fetchCoordsClear };\n\nexport default withLocalStorage(\"profileData\", null)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(styles)(OrderForm))\n);\n","import React, { Component } from \"react\";\n\nimport mapboxgl from \"mapbox-gl/dist/mapbox-gl.js\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport OrderForm from \"../OrderForm\";\n\nconst styles = () => ({\n  wrap: { flexGrow: 1, flexDirection: \"column\" }\n});\n\nclass Map extends Component {\n  map = null;\n  mapContainer = React.createRef();\n\n  removePath = () => {\n    if (this.map) {\n      this.map.removeLayer(\"route\");\n      this.map.removeSource(\"route\");\n    }\n  };\n\n  addPath = coords => {\n    if (this.map)\n      this.map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"LineString\",\n              coordinates: coords\n            }\n          }\n        },\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#888\",\n          \"line-width\": 8\n        }\n      });\n    this.map.flyTo({ center: coords[0], zoom: 10 });\n  };\n\n  componentDidMount() {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiaWxpYWlzIiwiYSI6ImNqcmRxNHZlbTFsemI0NG4weW92Zm94d3gifQ.0Ngw_ekGu3GEqrmGKdrOlw\";\n    this.map = new mapboxgl.Map({\n      container: \"rootMap\",\n      style: \"mapbox://styles/mapbox/streets-v9\",\n      center: [30.2656504, 59.8029126],\n      zoom: 15\n    });\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container={true} className={classes.wrap}>\n        <Grid className={classes.wrap} id=\"rootMap\" ref={this.mapContainer} />\n        <OrderForm addPath={this.addPath} removePath={this.removePath} />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Map);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getLoggedStatus } from \"../../modules/Auth\";\n\nclass PrivateRoute extends Component {\n  renderRoute = props => {\n    const { component: MyComponent, loggedIn } = this.props;\n    return loggedIn ? <MyComponent {...props} /> : <Redirect to=\"/login\" />;\n  };\n\n  render() {\n    const { component, loggedIn, ...rest } = this.props;\n    return <Route {...rest} render={this.renderRoute} />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: getLoggedStatus(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport NumberFormat from \"react-number-format\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { withStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withLocalStorage } from \"../HOCs/withLocalstorage\";\n\nimport { isNumeric } from \"../../modules/api.js\";\nimport { getLoggedStatus } from \"../../modules/Auth\";\n\nconst styles = () => ({\n  wrap: {\n    width: \"960px\",\n    height: \"360px\",\n    backgroundColor: \"white\",\n    padding: \"24px\",\n    borderRadius: \"5px\"\n  }\n});\n\nconst validate = values => {\n  const errors = {};\n  if (\n    values.numberCardField &&\n    values.numberCardField.split(\" \").join(\"\").length !== 16\n  ) {\n    errors.numberCardField = \"В номере карты 16 цифр\";\n  }\n  if (values.cvvField && !isNumeric(values.cvvField)) {\n    errors.cvvField = \"CVV может содержать только цифры\";\n  } else if (values.cvvField && values.cvvField.length !== 3) {\n    errors.cvvField = \"CVV состоит из 3 цифр\";\n  }\n  return errors;\n};\n\nconst renderTextField = props => {\n  const {\n    input,\n    label,\n    meta: { touched, error },\n    ...custom\n  } = props;\n  return (\n    <TextField\n      label={label}\n      placeholder={label}\n      helperText={touched && error}\n      {...input}\n      {...custom}\n      error={touched && error}\n      fullWidth\n    />\n  );\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange(values.value);\n      }}\n      format=\"#### #### #### ####\"\n    />\n  );\n}\n\nclass ProfileForm extends Component {\n  state = { mayRedirect: false };\n\n  submit = values => {\n    const { saveData } = this.props;\n\n    saveData(values);\n    this.setState({ mayRedirect: true });\n  };\n\n  render() {\n    const { handleSubmit, classes } = this.props;\n\n    return (\n      <form onSubmit={handleSubmit(this.submit)}>\n        <Grid container className={classes.wrap} spacing={24}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" align=\"center\">\n              Профиль\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Field\n              name=\"nameField\"\n              type=\"text\"\n              id=\"name-field\"\n              required={true}\n              component={renderTextField}\n              label=\"Имя владельца\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Field\n              name=\"dateField\"\n              type=\"date\"\n              id=\"date-field\"\n              required={true}\n              InputLabelProps={{\n                shrink: true\n              }}\n              component={renderTextField}\n              label=\"Дата окончания действия\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Field\n              name=\"numberCardField\"\n              type=\"text\"\n              id=\"numberCard-field\"\n              required={true}\n              component={renderTextField}\n              label=\"Номер карты\"\n              InputProps={{ inputComponent: NumberFormatCustom }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Field\n              name=\"cvvField\"\n              type=\"text\"\n              id=\"cvv-field\"\n              required={true}\n              component={renderTextField}\n              label=\"CVV\"\n            />\n          </Grid>\n          <Grid item>\n            <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n              Сохранить\n            </Button>\n          </Grid>\n        </Grid>\n        {this.state.mayRedirect ? <Redirect to=\"/map\" /> : null}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: getLoggedStatus(state)\n});\n\nconst mapDispatchToProps = {};\n\nexport default withLocalStorage(\"profileData\", null)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    withStyles(styles)(\n      reduxForm({\n        form: \"ProfileFormUnic\",\n        enableReinitialize: true,\n        keepDirtyOnReinitialize: false,\n        validate\n      })(ProfileForm)\n    )\n  )\n);\n","import React, { Component } from \"react\";\nimport { Link, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport LoginForm from \"../LoginForm\";\nimport Map from \"../Map\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport ProfileForm from \"../ProfileForm\";\n\nimport { getLoggedStatus } from \"../../modules/Auth\";\nimport { loginReset } from \"../../modules/Auth\";\nimport { fetchInitialState } from \"../../modules/Profile\";\n\nconst styles = () => ({\n  root: {\n    height: \"100vh\"\n  },\n  wrap: {\n    flexGrow: 1,\n    backgroundColor: \"lightgrey\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\"\n  },\n  appBar: { backgroundColor: \"white\" },\n  title: { flexGrow: 1 },\n  btn: { color: \"rgba(0, 0, 0, 0.54)\" }\n});\n\nclass App extends Component {\n  render() {\n    const { classes, loggedIn, loginReset } = this.props;\n    const handleClick = () => {\n      if (loggedIn) loginReset();\n    };\n\n    return (\n      <Grid\n        className={classes.root}\n        container={true}\n        spacing={0}\n        direction=\"column\"\n        wrap=\"nowrap\"\n      >\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Grid container>\n              <Typography\n                variant=\"h5\"\n                color=\"textSecondary\"\n                className={classes.title}\n              >\n                LoftTaxi\n              </Typography>\n              <Button\n                className={classes.btn}\n                component={Link}\n                to={loggedIn ? \"/map\" : \"/login\"}\n              >\n                Карта\n              </Button>\n              <Button\n                className={classes.btn}\n                component={Link}\n                to={loggedIn ? \"/profile\" : \"/login\"}\n              >\n                Профиль\n              </Button>\n              <Button\n                className={classes.btn}\n                onClick={handleClick}\n                component={Link}\n                to=\"/login\"\n              >\n                {loggedIn ? \"Выйти\" : \"Войти\"}\n              </Button>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container={true} className={classes.wrap}>\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <PrivateRoute path=\"/map\" component={Map} />\n            <PrivateRoute path=\"/profile\" component={ProfileForm} />\n            <Redirect to=\"/login\" />\n          </Switch>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: getLoggedStatus(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginReset, fetchInitialState }\n)(withStyles(styles)(App));\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport App from \"../App\";\n\nexport default class RootRouter extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" component={App} />\n      </Switch>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport getStore from \"./store.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport RootRouter from \"./components/RootRouter\";\nimport \"typeface-roboto\";\n\nconst store = getStore();\n\nReactDOM.render(\n  <BrowserRouter basename=\"/taxi/\">\n    <Provider store={store}>\n      <RootRouter />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}